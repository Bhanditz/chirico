
Tip 1:

Replace elements is the list with
five, if the element is less than 0


k = {1, 2, -3, 4}
k /. x_ /; x < 0 -> 5



Tip 2:

Solve[2x+3==5, x]
Solve[60*x == 55*40 + ((x - 40)*55*1.5), x]



Tip 3:

All primes from 1 to 23

Cases[Table[i, {i, 1, 23}], _?PrimeQ]



Tip 4:

Patterns - destructuring

f[a] + g[b] /. x_[y_] -> y[x]


Tip 5:

The following function takes a list and returns 
True is there are more than 2 elements in a list
that sum to at least 7.

sp[x__] := MatchQ[x, _List?(Length[#] > 2 && Plus @@ # > 6 &)]


sp[{1,2,3,4}]

True


Note that you can also use this in a select statement.

Select[{{1, 2, 3}, {4, 4, 5, 6, 7}}, sp]



Tip 6:

Difference between replace and replace repeat.

i j k l /. x_ y_ -> x + y

i+j k l


i j k l //. x_ y_ -> x + y

i+j+k+l



Tip 7:

t = {a, b, c, d, e, f, g}

t[[3]]
c

t[[3 ;; 6]]
{c, d, e, f}

t[[{1, 4}]]
{a, d}



Tip 8:

Note the above tip is easier with the Take
function.

Take[t,-3]
{e,f,g}

Take[t,{2,5}]
{b,c,d,e}

Also see Drop.

Drop[t,3]
{d, e, f, g}

Drop[t, {3, 5}]
{a, b, f, g}

Drop[t, -1]
{a, b, c, d, e, f}




Tip 9:

Working with primes.

 http://www.perfsci.com/downloads/primekit30Sep02.zip




Tip 10:


In[12]:= Subsets[{1, 2, 3}]

Out[12]= {{}, {1}, {2}, {3}, {1, 2}, {1, 3}, {2, 3}, {1, 2, 3}}


In[11]:= Count[Subsets[{1, 2, 3}], _List]

Out[11]= 8




Tip 11:

More with functions.

ClearAll[f]
f[0]:=1
f[1]:=1
f[n_Integer]:=n*f[n-1]/; n>-1
f[n_]:=0 /; n<=-1



Tip 12:

p2[x_, y_] :=  StringCases[IntegerString[235], RegularExpression[y]]

ToExpression[ToString[p2[234, "[0-9][3][0-9]"][[1]] + 1]]

236


Here's a better example

In[82]:= p3[x_, y_] := StringCases[ToString /@ x, RegularExpression[y]]

In[84]:= Flatten[p3[Table[x, {x, 1, 300}], "[0-9][3][0-9]"]]

Out[84]= {"130", "131", "132", "133", "134", "135", "136", "137", \
"138", "139", "230", "231", "232", "233", "234", "235", "236", "237", \
"238", "239"}


And you can do the following:

Cases[ToExpression /@   Flatten[p3[Table[x, {x, 1, 100}], "[0-9][3]"]], _?PrimeQ]