# Makefile.in generated by automake 1.10.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/simple_but_common_cpp
pkglibdir = $(libdir)/simple_but_common_cpp
pkgincludedir = $(includedir)/simple_but_common_cpp
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
#bin_PROGRAMS = stoupper$(EXEEXT) vectorD$(EXEEXT) \
#	vheap$(EXEEXT) access_to_private$(EXEEXT) \
#	compile_time_polymorphism$(EXEEXT) \
#	copy_constructor_assignment$(EXEEXT) \
#	copy_if_trans$(EXEEXT) \
#	copy_output_list_vector$(EXEEXT) \
#	for_each_sum2$(EXEEXT) \
#	for_each_sum$(EXEEXT) functionoids$(EXEEXT) \
#	funct_ptrs$(EXEEXT) iterswap$(EXEEXT) \
#	list2$(EXEEXT) list3b$(EXEEXT) \
#	list3$(EXEEXT) list3c$(EXEEXT) \
#	list0$(EXEEXT) permutation$(EXEEXT) \
#	remove_if$(EXEEXT) string_toupper$(EXEEXT) \
#	vec2$(EXEEXT) vec$(EXEEXT) strsplt$(EXEEXT) \
#	strchar$(EXEEXT) virtualfunc$(EXEEXT) \
#	namedcnstidiom$(EXEEXT) \
#	array_passing$(EXEEXT) hollywood$(EXEEXT) \
#	hollywood2$(EXEEXT) hollywood3$(EXEEXT) \
#	fib$(EXEEXT) integrate$(EXEEXT) \
#	integrate2$(EXEEXT) raii$(EXEEXT) \
#	cstr$(EXEEXT) strfrmscratch$(EXEEXT) \
#	rational$(EXEEXT) rational2$(EXEEXT) \
#	rtrim$(EXEEXT) rand$(EXEEXT) \
#	stringstreamnum$(EXEEXT) cards$(EXEEXT) \
#	sort_input$(EXEEXT) hanoi$(EXEEXT) \
#	mtime$(EXEEXT) autoptr$(EXEEXT) \
#	resource_handle$(EXEEXT) b$(EXEEXT) \
#	b2$(EXEEXT) ostream_sample$(EXEEXT) \
#	strategy_pattern$(EXEEXT) \
#	state_pattern$(EXEEXT) \
#	state_pattern2$(EXEEXT) \
#	istreamExample$(EXEEXT) explicit$(EXEEXT) \
#	explicit2$(EXEEXT)
bin_PROGRAMS = sprog$(EXEEXT) stoupper$(EXEEXT) \
	vectorD$(EXEEXT) vheap$(EXEEXT) \
	access_to_private$(EXEEXT) \
	compile_time_polymorphism$(EXEEXT) \
	copy_constructor_assignment$(EXEEXT) \
	copy_if_trans$(EXEEXT) \
	copy_output_list_vector$(EXEEXT) \
	for_each_sum2$(EXEEXT) for_each_sum$(EXEEXT) \
	functionoids$(EXEEXT) funct_ptrs$(EXEEXT) \
	iterswap$(EXEEXT) list2$(EXEEXT) \
	list3b$(EXEEXT) list3$(EXEEXT) \
	list3c$(EXEEXT) list0$(EXEEXT) \
	permutation$(EXEEXT) remove_if$(EXEEXT) \
	sqlite3api$(EXEEXT) \
	sqlite3apiHandler$(EXEEXT) \
	string_toupper$(EXEEXT) vec2$(EXEEXT) \
	vec$(EXEEXT) strsplt$(EXEEXT) \
	strchar$(EXEEXT) virtualfunc$(EXEEXT) \
	namedcnstidiom$(EXEEXT) \
	array_passing$(EXEEXT) hollywood$(EXEEXT) \
	hollywood2$(EXEEXT) hollywood3$(EXEEXT) \
	fib$(EXEEXT) integrate$(EXEEXT) \
	integrate2$(EXEEXT) raii$(EXEEXT) \
	cstr$(EXEEXT) strfrmscratch$(EXEEXT) \
	rational$(EXEEXT) rational2$(EXEEXT) \
	rtrim$(EXEEXT) rand$(EXEEXT) \
	stringstreamnum$(EXEEXT) cards$(EXEEXT) \
	sort_input$(EXEEXT) hanoi$(EXEEXT) \
	mtime$(EXEEXT) autoptr$(EXEEXT) \
	resource_handle$(EXEEXT) b$(EXEEXT) \
	b2$(EXEEXT) ostream_sample$(EXEEXT) \
	strategy_pattern$(EXEEXT) \
	state_pattern$(EXEEXT) \
	state_pattern2$(EXEEXT) \
	istreamExample$(EXEEXT) explicit$(EXEEXT) \
	explicit2$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/configure AUTHORS COPYING \
	ChangeLog INSTALL NEWS TODO depcomp install-sh missing \
	mkinstalldirs
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_access_to_private_OBJECTS = access_to_private.$(OBJEXT)
access_to_private_OBJECTS = $(am_access_to_private_OBJECTS)
access_to_private_DEPENDENCIES =
am_array_passing_OBJECTS = array_passing.$(OBJEXT)
array_passing_OBJECTS = $(am_array_passing_OBJECTS)
array_passing_DEPENDENCIES =
am_autoptr_OBJECTS = autoptr.$(OBJEXT)
autoptr_OBJECTS = $(am_autoptr_OBJECTS)
autoptr_DEPENDENCIES =
am_b_OBJECTS = b.$(OBJEXT)
b_OBJECTS = $(am_b_OBJECTS)
b_DEPENDENCIES =
am_b2_OBJECTS = b2.$(OBJEXT)
b2_OBJECTS = $(am_b2_OBJECTS)
b2_DEPENDENCIES =
am_cards_OBJECTS = cards.$(OBJEXT)
cards_OBJECTS = $(am_cards_OBJECTS)
cards_DEPENDENCIES =
am_compile_time_polymorphism_OBJECTS =  \
	compile-time_polymorphism.$(OBJEXT)
compile_time_polymorphism_OBJECTS =  \
	$(am_compile_time_polymorphism_OBJECTS)
compile_time_polymorphism_DEPENDENCIES =
am_copy_constructor_assignment_OBJECTS =  \
	copy_constructor_assignment.$(OBJEXT)
copy_constructor_assignment_OBJECTS =  \
	$(am_copy_constructor_assignment_OBJECTS)
copy_constructor_assignment_DEPENDENCIES =
am_copy_if_trans_OBJECTS = copy_if_trans.$(OBJEXT)
copy_if_trans_OBJECTS = $(am_copy_if_trans_OBJECTS)
copy_if_trans_DEPENDENCIES =
am_copy_output_list_vector_OBJECTS =  \
	copy_output_list_vector.$(OBJEXT)
copy_output_list_vector_OBJECTS =  \
	$(am_copy_output_list_vector_OBJECTS)
copy_output_list_vector_DEPENDENCIES =
am_cstr_OBJECTS = cstr.$(OBJEXT)
cstr_OBJECTS = $(am_cstr_OBJECTS)
cstr_DEPENDENCIES =
am_explicit_OBJECTS = explicit.$(OBJEXT)
explicit_OBJECTS = $(am_explicit_OBJECTS)
explicit_DEPENDENCIES =
am_explicit2_OBJECTS = explicit2.$(OBJEXT)
explicit2_OBJECTS = $(am_explicit2_OBJECTS)
explicit2_DEPENDENCIES =
am_fib_OBJECTS = fib.$(OBJEXT)
fib_OBJECTS = $(am_fib_OBJECTS)
fib_DEPENDENCIES =
am_for_each_sum_OBJECTS = for_each_sum.$(OBJEXT)
for_each_sum_OBJECTS = $(am_for_each_sum_OBJECTS)
for_each_sum_DEPENDENCIES =
am_for_each_sum2_OBJECTS = for_each_sum2.$(OBJEXT)
for_each_sum2_OBJECTS = $(am_for_each_sum2_OBJECTS)
for_each_sum2_DEPENDENCIES =
am_funct_ptrs_OBJECTS = funct_ptrs.$(OBJEXT)
funct_ptrs_OBJECTS = $(am_funct_ptrs_OBJECTS)
funct_ptrs_DEPENDENCIES =
am_functionoids_OBJECTS = functionoids.$(OBJEXT)
functionoids_OBJECTS = $(am_functionoids_OBJECTS)
functionoids_DEPENDENCIES =
am_hanoi_OBJECTS = hanoi.$(OBJEXT)
hanoi_OBJECTS = $(am_hanoi_OBJECTS)
hanoi_DEPENDENCIES =
am_hollywood_OBJECTS = hollywood.$(OBJEXT)
hollywood_OBJECTS = $(am_hollywood_OBJECTS)
hollywood_DEPENDENCIES =
am_hollywood2_OBJECTS = hollywood2.$(OBJEXT)
hollywood2_OBJECTS = $(am_hollywood2_OBJECTS)
hollywood2_DEPENDENCIES =
am_hollywood3_OBJECTS = hollywood3.$(OBJEXT)
hollywood3_OBJECTS = $(am_hollywood3_OBJECTS)
hollywood3_DEPENDENCIES =
am_integrate_OBJECTS = integrate.$(OBJEXT)
integrate_OBJECTS = $(am_integrate_OBJECTS)
integrate_DEPENDENCIES =
am_integrate2_OBJECTS = integrate2.$(OBJEXT)
integrate2_OBJECTS = $(am_integrate2_OBJECTS)
integrate2_DEPENDENCIES =
am_istreamExample_OBJECTS = mainIstream.$(OBJEXT)
istreamExample_OBJECTS = $(am_istreamExample_OBJECTS)
istreamExample_DEPENDENCIES =
am_iterswap_OBJECTS = iterswap.$(OBJEXT)
iterswap_OBJECTS = $(am_iterswap_OBJECTS)
iterswap_DEPENDENCIES =
am_list0_OBJECTS = list.$(OBJEXT)
list0_OBJECTS = $(am_list0_OBJECTS)
list0_DEPENDENCIES =
am_list2_OBJECTS = list2.$(OBJEXT)
list2_OBJECTS = $(am_list2_OBJECTS)
list2_DEPENDENCIES =
am_list3_OBJECTS = list3.$(OBJEXT)
list3_OBJECTS = $(am_list3_OBJECTS)
list3_DEPENDENCIES =
am_list3b_OBJECTS = list3b.$(OBJEXT)
list3b_OBJECTS = $(am_list3b_OBJECTS)
list3b_DEPENDENCIES =
am_list3c_OBJECTS = list3c.$(OBJEXT)
list3c_OBJECTS = $(am_list3c_OBJECTS)
list3c_DEPENDENCIES =
am_mtime_OBJECTS = time.$(OBJEXT)
mtime_OBJECTS = $(am_mtime_OBJECTS)
mtime_DEPENDENCIES =
am_namedcnstidiom_OBJECTS = namedconstructoridiom.$(OBJEXT)
namedcnstidiom_OBJECTS = $(am_namedcnstidiom_OBJECTS)
namedcnstidiom_DEPENDENCIES =
am_ostream_sample_OBJECTS = ostream_sample.$(OBJEXT)
ostream_sample_OBJECTS = $(am_ostream_sample_OBJECTS)
ostream_sample_DEPENDENCIES =
am_permutation_OBJECTS = permutation.$(OBJEXT)
permutation_OBJECTS = $(am_permutation_OBJECTS)
permutation_DEPENDENCIES =
am_raii_OBJECTS = raii.$(OBJEXT)
raii_OBJECTS = $(am_raii_OBJECTS)
raii_DEPENDENCIES =
am_rand_OBJECTS = rand.$(OBJEXT)
rand_OBJECTS = $(am_rand_OBJECTS)
rand_DEPENDENCIES =
am_rational_OBJECTS = rational.$(OBJEXT)
rational_OBJECTS = $(am_rational_OBJECTS)
rational_DEPENDENCIES =
am_rational2_OBJECTS = rational2.$(OBJEXT)
rational2_OBJECTS = $(am_rational2_OBJECTS)
rational2_DEPENDENCIES =
am_remove_if_OBJECTS = remove_if.$(OBJEXT)
remove_if_OBJECTS = $(am_remove_if_OBJECTS)
remove_if_DEPENDENCIES =
am_resource_handle_OBJECTS = resource_handle.$(OBJEXT)
resource_handle_OBJECTS = $(am_resource_handle_OBJECTS)
resource_handle_DEPENDENCIES =
am_rtrim_OBJECTS = rtrim.$(OBJEXT)
rtrim_OBJECTS = $(am_rtrim_OBJECTS)
rtrim_DEPENDENCIES =
am_sort_input_OBJECTS = sort_input.$(OBJEXT)
sort_input_OBJECTS = $(am_sort_input_OBJECTS)
sort_input_DEPENDENCIES =
am_sprog_OBJECTS = sqlite3api.$(OBJEXT)
sprog_OBJECTS = $(am_sprog_OBJECTS)
sprog_DEPENDENCIES =
am_sqlite3api_OBJECTS = sqlite3api.$(OBJEXT)
sqlite3api_OBJECTS = $(am_sqlite3api_OBJECTS)
sqlite3api_DEPENDENCIES =
am_sqlite3apiHandler_OBJECTS = sqlite3apiHandler.$(OBJEXT)
sqlite3apiHandler_OBJECTS = $(am_sqlite3apiHandler_OBJECTS)
sqlite3apiHandler_DEPENDENCIES =
am_state_pattern_OBJECTS = state_pattern.$(OBJEXT)
state_pattern_OBJECTS = $(am_state_pattern_OBJECTS)
state_pattern_DEPENDENCIES =
am_state_pattern2_OBJECTS = state_pattern2.$(OBJEXT)
state_pattern2_OBJECTS = $(am_state_pattern2_OBJECTS)
state_pattern2_DEPENDENCIES =
am_stoupper_OBJECTS = string_toupper.$(OBJEXT)
stoupper_OBJECTS = $(am_stoupper_OBJECTS)
stoupper_DEPENDENCIES =
am_strategy_pattern_OBJECTS = strategy_pattern.$(OBJEXT)
strategy_pattern_OBJECTS = $(am_strategy_pattern_OBJECTS)
strategy_pattern_DEPENDENCIES =
am_strchar_OBJECTS = string_and_char.$(OBJEXT)
strchar_OBJECTS = $(am_strchar_OBJECTS)
strchar_DEPENDENCIES =
am_strfrmscratch_OBJECTS = string_from_scratch.$(OBJEXT)
strfrmscratch_OBJECTS = $(am_strfrmscratch_OBJECTS)
strfrmscratch_DEPENDENCIES =
am_string_toupper_OBJECTS = string_toupper.$(OBJEXT)
string_toupper_OBJECTS = $(am_string_toupper_OBJECTS)
string_toupper_DEPENDENCIES =
am_stringstreamnum_OBJECTS = stringstream_num.$(OBJEXT)
stringstreamnum_OBJECTS = $(am_stringstreamnum_OBJECTS)
stringstreamnum_DEPENDENCIES =
am_strsplt_OBJECTS = string_split.$(OBJEXT)
strsplt_OBJECTS = $(am_strsplt_OBJECTS)
strsplt_DEPENDENCIES =
am_vec_OBJECTS = vec.$(OBJEXT)
vec_OBJECTS = $(am_vec_OBJECTS)
vec_DEPENDENCIES =
am_vec2_OBJECTS = vec2.$(OBJEXT)
vec2_OBJECTS = $(am_vec2_OBJECTS)
vec2_DEPENDENCIES =
am_vectorD_OBJECTS = 3Dvector.$(OBJEXT)
vectorD_OBJECTS = $(am_vectorD_OBJECTS)
vectorD_DEPENDENCIES =
am_vheap_OBJECTS = vec_on_heap.$(OBJEXT)
vheap_OBJECTS = $(am_vheap_OBJECTS)
vheap_DEPENDENCIES =
am_virtualfunc_OBJECTS = virtual_function.$(OBJEXT)
virtualfunc_OBJECTS = $(am_virtualfunc_OBJECTS)
virtualfunc_DEPENDENCIES =
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(access_to_private_SOURCES) $(array_passing_SOURCES) \
	$(autoptr_SOURCES) $(b_SOURCES) $(b2_SOURCES) $(cards_SOURCES) \
	$(compile_time_polymorphism_SOURCES) \
	$(copy_constructor_assignment_SOURCES) \
	$(copy_if_trans_SOURCES) $(copy_output_list_vector_SOURCES) \
	$(cstr_SOURCES) $(explicit_SOURCES) $(explicit2_SOURCES) \
	$(fib_SOURCES) $(for_each_sum_SOURCES) \
	$(for_each_sum2_SOURCES) $(funct_ptrs_SOURCES) \
	$(functionoids_SOURCES) $(hanoi_SOURCES) $(hollywood_SOURCES) \
	$(hollywood2_SOURCES) $(hollywood3_SOURCES) \
	$(integrate_SOURCES) $(integrate2_SOURCES) \
	$(istreamExample_SOURCES) $(iterswap_SOURCES) $(list0_SOURCES) \
	$(list2_SOURCES) $(list3_SOURCES) $(list3b_SOURCES) \
	$(list3c_SOURCES) $(mtime_SOURCES) $(namedcnstidiom_SOURCES) \
	$(ostream_sample_SOURCES) $(permutation_SOURCES) \
	$(raii_SOURCES) $(rand_SOURCES) $(rational_SOURCES) \
	$(rational2_SOURCES) $(remove_if_SOURCES) \
	$(resource_handle_SOURCES) $(rtrim_SOURCES) \
	$(sort_input_SOURCES) $(sprog_SOURCES) $(sqlite3api_SOURCES) \
	$(sqlite3apiHandler_SOURCES) $(state_pattern_SOURCES) \
	$(state_pattern2_SOURCES) $(stoupper_SOURCES) \
	$(strategy_pattern_SOURCES) $(strchar_SOURCES) \
	$(strfrmscratch_SOURCES) $(string_toupper_SOURCES) \
	$(stringstreamnum_SOURCES) $(strsplt_SOURCES) $(vec_SOURCES) \
	$(vec2_SOURCES) $(vectorD_SOURCES) $(vheap_SOURCES) \
	$(virtualfunc_SOURCES)
DIST_SOURCES = $(access_to_private_SOURCES) $(array_passing_SOURCES) \
	$(autoptr_SOURCES) $(b_SOURCES) $(b2_SOURCES) $(cards_SOURCES) \
	$(compile_time_polymorphism_SOURCES) \
	$(copy_constructor_assignment_SOURCES) \
	$(copy_if_trans_SOURCES) $(copy_output_list_vector_SOURCES) \
	$(cstr_SOURCES) $(explicit_SOURCES) $(explicit2_SOURCES) \
	$(fib_SOURCES) $(for_each_sum_SOURCES) \
	$(for_each_sum2_SOURCES) $(funct_ptrs_SOURCES) \
	$(functionoids_SOURCES) $(hanoi_SOURCES) $(hollywood_SOURCES) \
	$(hollywood2_SOURCES) $(hollywood3_SOURCES) \
	$(integrate_SOURCES) $(integrate2_SOURCES) \
	$(istreamExample_SOURCES) $(iterswap_SOURCES) $(list0_SOURCES) \
	$(list2_SOURCES) $(list3_SOURCES) $(list3b_SOURCES) \
	$(list3c_SOURCES) $(mtime_SOURCES) $(namedcnstidiom_SOURCES) \
	$(ostream_sample_SOURCES) $(permutation_SOURCES) \
	$(raii_SOURCES) $(rand_SOURCES) $(rational_SOURCES) \
	$(rational2_SOURCES) $(remove_if_SOURCES) \
	$(resource_handle_SOURCES) $(rtrim_SOURCES) \
	$(sort_input_SOURCES) $(sprog_SOURCES) $(sqlite3api_SOURCES) \
	$(sqlite3apiHandler_SOURCES) $(state_pattern_SOURCES) \
	$(state_pattern2_SOURCES) $(stoupper_SOURCES) \
	$(strategy_pattern_SOURCES) $(strchar_SOURCES) \
	$(strfrmscratch_SOURCES) $(string_toupper_SOURCES) \
	$(stringstreamnum_SOURCES) $(strsplt_SOURCES) $(vec_SOURCES) \
	$(vec2_SOURCES) $(vectorD_SOURCES) $(vheap_SOURCES) \
	$(virtualfunc_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/chirico/dev/chirico/c++/simple_but_common_cpp/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/chirico/dev/chirico/c++/simple_but_common_cpp/missing --run tar
AUTOCONF = ${SHELL} /home/chirico/dev/chirico/c++/simple_but_common_cpp/missing --run autoconf
AUTOHEADER = ${SHELL} /home/chirico/dev/chirico/c++/simple_but_common_cpp/missing --run autoheader
AUTOMAKE = ${SHELL} /home/chirico/dev/chirico/c++/simple_but_common_cpp/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wall -W -O2 -s -pipe -ftemplate-depth-50
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"simple_but_common_cpp\" -DVERSION=\"0.0.118\" -DUSE_CTRAITS=1 -DHAVE_LIBSQLITE3=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
EXTRALIB = 
INCLUDES = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/chirico/dev/chirico/c++/simple_but_common_cpp/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = simple_but_common_cpp
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/sh
SQLIBOBJS = -Wl,-R/usr/local/lib
SQLLIBS = -lsqlite3 
STRIP = 
VERSION = 0.0.118
abs_builddir = /home/chirico/dev/chirico/c++/simple_but_common_cpp
abs_srcdir = /home/chirico/dev/chirico/c++/simple_but_common_cpp
abs_top_builddir = /home/chirico/dev/chirico/c++/simple_but_common_cpp
abs_top_srcdir = /home/chirico/dev/chirico/c++/simple_but_common_cpp
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/chirico/dev/chirico/c++/simple_but_common_cpp/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
stoupper_SOURCES = string_toupper.cc
stoupper_LDADD =   
sprog_SOURCES = sqlite3api.cc useful_classes/mysqlite3.h
sprog_LDADD =  -Wl,-R/usr/local/lib  -lsqlite3 
sqlite3apiHandler_SOURCES = sqlite3apiHandler.cc useful_classes/mysqlite3.h
sqlite3apiHandler_LDADD =  -Wl,-R/usr/local/lib  -lsqlite3 
vectorD_SOURCES = 3Dvector.cc
access_to_private_SOURCES = access_to_private.cc
#class_template1_SOURCES = class_template1.cc
compile_time_polymorphism_SOURCES = compile-time_polymorphism.cc
copy_constructor_assignment_SOURCES = copy_constructor_assignment.cc
copy_if_trans_SOURCES = copy_if_trans.cc
copy_output_list_vector_SOURCES = copy_output_list_vector.cc
for_each_sum2_SOURCES = for_each_sum2.cc
for_each_sum_SOURCES = for_each_sum.cc
functionoids_SOURCES = functionoids.cc
funct_ptrs_SOURCES = funct_ptrs.cc
iterswap_SOURCES = iterswap.cc
list2_SOURCES = list2.cc
list3b_SOURCES = list3b.cc
list3_SOURCES = list3.cc
list3c_SOURCES = list3c.cc
list0_SOURCES = list.cc
permutation_SOURCES = permutation.cc
remove_if_SOURCES = remove_if.cc
sqlite3api_SOURCES = sqlite3api.cc useful_classes/mysqlite3.h
string_toupper_SOURCES = string_toupper.cc
vec2_SOURCES = vec2.cc
vec_SOURCES = vec.cc
vheap_SOURCES = vec_on_heap.cc
strsplt_SOURCES = string_split.cc
#strspltt_SOURCES = string_splitTemplate.cc
strchar_SOURCES = string_and_char.cc
virtualfunc_SOURCES = virtual_function.cc 
namedcnstidiom_SOURCES = namedconstructoridiom.cc
array_passing_SOURCES = array_passing.cc
hollywood_SOURCES = hollywood.cc
hollywood2_SOURCES = hollywood2.cc
hollywood3_SOURCES = hollywood3.cc
fib_SOURCES = fib.cc
integrate_SOURCES = integrate.cc
integrate2_SOURCES = integrate2.cc
raii_SOURCES = raii.cc
cstr_SOURCES = cstr.cc
strfrmscratch_SOURCES = string_from_scratch.cc
rational_SOURCES = rational.cc
rational2_SOURCES = rational2.cc
rtrim_SOURCES = rtrim.cc
rand_SOURCES = rand.cc
stringstreamnum_SOURCES = stringstream_num.cc
cards_SOURCES = cards.cc
sort_input_SOURCES = sort_input.cc
hanoi_SOURCES = hanoi.cc
mtime_SOURCES = time.cc
autoptr_SOURCES = autoptr.cc
resource_handle_SOURCES = resource_handle.cc
b_SOURCES = b.cc
b2_SOURCES = b2.cc
ostream_sample_SOURCES = ostream_sample.cc
strategy_pattern_SOURCES = strategy_pattern.cc
state_pattern_SOURCES = state_pattern.cc
state_pattern2_SOURCES = state_pattern2.cc
istreamExample_SOURCES = mainIstream.cc IstreamExample.h
explicit_SOURCES = explicit.cc
explicit2_SOURCES = explicit2.cc
vectorD_LDADD =   
access_to_private_LDADD =   
#class_template1_LDADD =    
compile_time_polymorphism_LDADD =   
copy_constructor_assignment_LDADD =   
copy_if_trans_LDADD =   
copy_output_list_vector_LDADD =   
for_each_sum2_LDADD =   
for_each_sum_LDADD =   
functionoids_LDADD =  
funct_ptrs_LDADD =   
iterswap_LDADD =   
list2_LDADD =   
list3b_LDADD =   
list3_LDADD =   
list3c_LDADD =  
list0_LDADD =     
permutation_LDADD =     
remove_if_LDADD =    
sqlite3api_LDADD =  -Wl,-R/usr/local/lib  -lsqlite3  
string_toupper_LDADD =   
vec2_LDADD =   
vec_LDADD =   
vheap_LDADD =   
strsplt_LDADD =   
#strspltt_LDADD =   
strchar_LDADD =   
virtualfunc_LDADD =   
namedcnstidiom_LDADD =   
array_passing_LDADD =   
hollywood_LDADD =   
hollywood2_LDADD =   
hollywood3_LDADD =   
fib_LDADD =  
integrate_LDADD =  
integrate2_LDADD =  
raii_LDADD =  
cstr_LDADD =  
strfrmscratch_LDADD =  
rational_LDADD =  
rational2_LDADD =  
rtrim_LDADD =  
rand_LDADD =  
stringstreamnum_LDADD =  
cards_LDADD =  
sort_input_LDADD =  
hanoi_LDADD =  
mtime_LDADD = 
autoptr_LDADD = 
resource_handle_LDADD = 
b_LDADD = 
b2_LDADD = 
ostream_sample_LDADD = 
strategy_pattern_LDADD = 
state_pattern_LDADD = 
state_pattern2_LDADD = 
istreamExample_LDADD = 
explicit_LDADD = 
explicit2_LDADD = 
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu '; \
	      cd $(srcdir) && $(AUTOMAKE) --gnu  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
access_to_private$(EXEEXT): $(access_to_private_OBJECTS) $(access_to_private_DEPENDENCIES) 
	@rm -f access_to_private$(EXEEXT)
	$(CXXLINK) $(access_to_private_OBJECTS) $(access_to_private_LDADD) $(LIBS)
array_passing$(EXEEXT): $(array_passing_OBJECTS) $(array_passing_DEPENDENCIES) 
	@rm -f array_passing$(EXEEXT)
	$(CXXLINK) $(array_passing_OBJECTS) $(array_passing_LDADD) $(LIBS)
autoptr$(EXEEXT): $(autoptr_OBJECTS) $(autoptr_DEPENDENCIES) 
	@rm -f autoptr$(EXEEXT)
	$(CXXLINK) $(autoptr_OBJECTS) $(autoptr_LDADD) $(LIBS)
b$(EXEEXT): $(b_OBJECTS) $(b_DEPENDENCIES) 
	@rm -f b$(EXEEXT)
	$(CXXLINK) $(b_OBJECTS) $(b_LDADD) $(LIBS)
b2$(EXEEXT): $(b2_OBJECTS) $(b2_DEPENDENCIES) 
	@rm -f b2$(EXEEXT)
	$(CXXLINK) $(b2_OBJECTS) $(b2_LDADD) $(LIBS)
cards$(EXEEXT): $(cards_OBJECTS) $(cards_DEPENDENCIES) 
	@rm -f cards$(EXEEXT)
	$(CXXLINK) $(cards_OBJECTS) $(cards_LDADD) $(LIBS)
compile_time_polymorphism$(EXEEXT): $(compile_time_polymorphism_OBJECTS) $(compile_time_polymorphism_DEPENDENCIES) 
	@rm -f compile_time_polymorphism$(EXEEXT)
	$(CXXLINK) $(compile_time_polymorphism_OBJECTS) $(compile_time_polymorphism_LDADD) $(LIBS)
copy_constructor_assignment$(EXEEXT): $(copy_constructor_assignment_OBJECTS) $(copy_constructor_assignment_DEPENDENCIES) 
	@rm -f copy_constructor_assignment$(EXEEXT)
	$(CXXLINK) $(copy_constructor_assignment_OBJECTS) $(copy_constructor_assignment_LDADD) $(LIBS)
copy_if_trans$(EXEEXT): $(copy_if_trans_OBJECTS) $(copy_if_trans_DEPENDENCIES) 
	@rm -f copy_if_trans$(EXEEXT)
	$(CXXLINK) $(copy_if_trans_OBJECTS) $(copy_if_trans_LDADD) $(LIBS)
copy_output_list_vector$(EXEEXT): $(copy_output_list_vector_OBJECTS) $(copy_output_list_vector_DEPENDENCIES) 
	@rm -f copy_output_list_vector$(EXEEXT)
	$(CXXLINK) $(copy_output_list_vector_OBJECTS) $(copy_output_list_vector_LDADD) $(LIBS)
cstr$(EXEEXT): $(cstr_OBJECTS) $(cstr_DEPENDENCIES) 
	@rm -f cstr$(EXEEXT)
	$(CXXLINK) $(cstr_OBJECTS) $(cstr_LDADD) $(LIBS)
explicit$(EXEEXT): $(explicit_OBJECTS) $(explicit_DEPENDENCIES) 
	@rm -f explicit$(EXEEXT)
	$(CXXLINK) $(explicit_OBJECTS) $(explicit_LDADD) $(LIBS)
explicit2$(EXEEXT): $(explicit2_OBJECTS) $(explicit2_DEPENDENCIES) 
	@rm -f explicit2$(EXEEXT)
	$(CXXLINK) $(explicit2_OBJECTS) $(explicit2_LDADD) $(LIBS)
fib$(EXEEXT): $(fib_OBJECTS) $(fib_DEPENDENCIES) 
	@rm -f fib$(EXEEXT)
	$(CXXLINK) $(fib_OBJECTS) $(fib_LDADD) $(LIBS)
for_each_sum$(EXEEXT): $(for_each_sum_OBJECTS) $(for_each_sum_DEPENDENCIES) 
	@rm -f for_each_sum$(EXEEXT)
	$(CXXLINK) $(for_each_sum_OBJECTS) $(for_each_sum_LDADD) $(LIBS)
for_each_sum2$(EXEEXT): $(for_each_sum2_OBJECTS) $(for_each_sum2_DEPENDENCIES) 
	@rm -f for_each_sum2$(EXEEXT)
	$(CXXLINK) $(for_each_sum2_OBJECTS) $(for_each_sum2_LDADD) $(LIBS)
funct_ptrs$(EXEEXT): $(funct_ptrs_OBJECTS) $(funct_ptrs_DEPENDENCIES) 
	@rm -f funct_ptrs$(EXEEXT)
	$(CXXLINK) $(funct_ptrs_OBJECTS) $(funct_ptrs_LDADD) $(LIBS)
functionoids$(EXEEXT): $(functionoids_OBJECTS) $(functionoids_DEPENDENCIES) 
	@rm -f functionoids$(EXEEXT)
	$(CXXLINK) $(functionoids_OBJECTS) $(functionoids_LDADD) $(LIBS)
hanoi$(EXEEXT): $(hanoi_OBJECTS) $(hanoi_DEPENDENCIES) 
	@rm -f hanoi$(EXEEXT)
	$(CXXLINK) $(hanoi_OBJECTS) $(hanoi_LDADD) $(LIBS)
hollywood$(EXEEXT): $(hollywood_OBJECTS) $(hollywood_DEPENDENCIES) 
	@rm -f hollywood$(EXEEXT)
	$(CXXLINK) $(hollywood_OBJECTS) $(hollywood_LDADD) $(LIBS)
hollywood2$(EXEEXT): $(hollywood2_OBJECTS) $(hollywood2_DEPENDENCIES) 
	@rm -f hollywood2$(EXEEXT)
	$(CXXLINK) $(hollywood2_OBJECTS) $(hollywood2_LDADD) $(LIBS)
hollywood3$(EXEEXT): $(hollywood3_OBJECTS) $(hollywood3_DEPENDENCIES) 
	@rm -f hollywood3$(EXEEXT)
	$(CXXLINK) $(hollywood3_OBJECTS) $(hollywood3_LDADD) $(LIBS)
integrate$(EXEEXT): $(integrate_OBJECTS) $(integrate_DEPENDENCIES) 
	@rm -f integrate$(EXEEXT)
	$(CXXLINK) $(integrate_OBJECTS) $(integrate_LDADD) $(LIBS)
integrate2$(EXEEXT): $(integrate2_OBJECTS) $(integrate2_DEPENDENCIES) 
	@rm -f integrate2$(EXEEXT)
	$(CXXLINK) $(integrate2_OBJECTS) $(integrate2_LDADD) $(LIBS)
istreamExample$(EXEEXT): $(istreamExample_OBJECTS) $(istreamExample_DEPENDENCIES) 
	@rm -f istreamExample$(EXEEXT)
	$(CXXLINK) $(istreamExample_OBJECTS) $(istreamExample_LDADD) $(LIBS)
iterswap$(EXEEXT): $(iterswap_OBJECTS) $(iterswap_DEPENDENCIES) 
	@rm -f iterswap$(EXEEXT)
	$(CXXLINK) $(iterswap_OBJECTS) $(iterswap_LDADD) $(LIBS)
list0$(EXEEXT): $(list0_OBJECTS) $(list0_DEPENDENCIES) 
	@rm -f list0$(EXEEXT)
	$(CXXLINK) $(list0_OBJECTS) $(list0_LDADD) $(LIBS)
list2$(EXEEXT): $(list2_OBJECTS) $(list2_DEPENDENCIES) 
	@rm -f list2$(EXEEXT)
	$(CXXLINK) $(list2_OBJECTS) $(list2_LDADD) $(LIBS)
list3$(EXEEXT): $(list3_OBJECTS) $(list3_DEPENDENCIES) 
	@rm -f list3$(EXEEXT)
	$(CXXLINK) $(list3_OBJECTS) $(list3_LDADD) $(LIBS)
list3b$(EXEEXT): $(list3b_OBJECTS) $(list3b_DEPENDENCIES) 
	@rm -f list3b$(EXEEXT)
	$(CXXLINK) $(list3b_OBJECTS) $(list3b_LDADD) $(LIBS)
list3c$(EXEEXT): $(list3c_OBJECTS) $(list3c_DEPENDENCIES) 
	@rm -f list3c$(EXEEXT)
	$(CXXLINK) $(list3c_OBJECTS) $(list3c_LDADD) $(LIBS)
mtime$(EXEEXT): $(mtime_OBJECTS) $(mtime_DEPENDENCIES) 
	@rm -f mtime$(EXEEXT)
	$(CXXLINK) $(mtime_OBJECTS) $(mtime_LDADD) $(LIBS)
namedcnstidiom$(EXEEXT): $(namedcnstidiom_OBJECTS) $(namedcnstidiom_DEPENDENCIES) 
	@rm -f namedcnstidiom$(EXEEXT)
	$(CXXLINK) $(namedcnstidiom_OBJECTS) $(namedcnstidiom_LDADD) $(LIBS)
ostream_sample$(EXEEXT): $(ostream_sample_OBJECTS) $(ostream_sample_DEPENDENCIES) 
	@rm -f ostream_sample$(EXEEXT)
	$(CXXLINK) $(ostream_sample_OBJECTS) $(ostream_sample_LDADD) $(LIBS)
permutation$(EXEEXT): $(permutation_OBJECTS) $(permutation_DEPENDENCIES) 
	@rm -f permutation$(EXEEXT)
	$(CXXLINK) $(permutation_OBJECTS) $(permutation_LDADD) $(LIBS)
raii$(EXEEXT): $(raii_OBJECTS) $(raii_DEPENDENCIES) 
	@rm -f raii$(EXEEXT)
	$(CXXLINK) $(raii_OBJECTS) $(raii_LDADD) $(LIBS)
rand$(EXEEXT): $(rand_OBJECTS) $(rand_DEPENDENCIES) 
	@rm -f rand$(EXEEXT)
	$(CXXLINK) $(rand_OBJECTS) $(rand_LDADD) $(LIBS)
rational$(EXEEXT): $(rational_OBJECTS) $(rational_DEPENDENCIES) 
	@rm -f rational$(EXEEXT)
	$(CXXLINK) $(rational_OBJECTS) $(rational_LDADD) $(LIBS)
rational2$(EXEEXT): $(rational2_OBJECTS) $(rational2_DEPENDENCIES) 
	@rm -f rational2$(EXEEXT)
	$(CXXLINK) $(rational2_OBJECTS) $(rational2_LDADD) $(LIBS)
remove_if$(EXEEXT): $(remove_if_OBJECTS) $(remove_if_DEPENDENCIES) 
	@rm -f remove_if$(EXEEXT)
	$(CXXLINK) $(remove_if_OBJECTS) $(remove_if_LDADD) $(LIBS)
resource_handle$(EXEEXT): $(resource_handle_OBJECTS) $(resource_handle_DEPENDENCIES) 
	@rm -f resource_handle$(EXEEXT)
	$(CXXLINK) $(resource_handle_OBJECTS) $(resource_handle_LDADD) $(LIBS)
rtrim$(EXEEXT): $(rtrim_OBJECTS) $(rtrim_DEPENDENCIES) 
	@rm -f rtrim$(EXEEXT)
	$(CXXLINK) $(rtrim_OBJECTS) $(rtrim_LDADD) $(LIBS)
sort_input$(EXEEXT): $(sort_input_OBJECTS) $(sort_input_DEPENDENCIES) 
	@rm -f sort_input$(EXEEXT)
	$(CXXLINK) $(sort_input_OBJECTS) $(sort_input_LDADD) $(LIBS)
sprog$(EXEEXT): $(sprog_OBJECTS) $(sprog_DEPENDENCIES) 
	@rm -f sprog$(EXEEXT)
	$(CXXLINK) $(sprog_OBJECTS) $(sprog_LDADD) $(LIBS)
sqlite3api$(EXEEXT): $(sqlite3api_OBJECTS) $(sqlite3api_DEPENDENCIES) 
	@rm -f sqlite3api$(EXEEXT)
	$(CXXLINK) $(sqlite3api_OBJECTS) $(sqlite3api_LDADD) $(LIBS)
sqlite3apiHandler$(EXEEXT): $(sqlite3apiHandler_OBJECTS) $(sqlite3apiHandler_DEPENDENCIES) 
	@rm -f sqlite3apiHandler$(EXEEXT)
	$(CXXLINK) $(sqlite3apiHandler_OBJECTS) $(sqlite3apiHandler_LDADD) $(LIBS)
state_pattern$(EXEEXT): $(state_pattern_OBJECTS) $(state_pattern_DEPENDENCIES) 
	@rm -f state_pattern$(EXEEXT)
	$(CXXLINK) $(state_pattern_OBJECTS) $(state_pattern_LDADD) $(LIBS)
state_pattern2$(EXEEXT): $(state_pattern2_OBJECTS) $(state_pattern2_DEPENDENCIES) 
	@rm -f state_pattern2$(EXEEXT)
	$(CXXLINK) $(state_pattern2_OBJECTS) $(state_pattern2_LDADD) $(LIBS)
stoupper$(EXEEXT): $(stoupper_OBJECTS) $(stoupper_DEPENDENCIES) 
	@rm -f stoupper$(EXEEXT)
	$(CXXLINK) $(stoupper_OBJECTS) $(stoupper_LDADD) $(LIBS)
strategy_pattern$(EXEEXT): $(strategy_pattern_OBJECTS) $(strategy_pattern_DEPENDENCIES) 
	@rm -f strategy_pattern$(EXEEXT)
	$(CXXLINK) $(strategy_pattern_OBJECTS) $(strategy_pattern_LDADD) $(LIBS)
strchar$(EXEEXT): $(strchar_OBJECTS) $(strchar_DEPENDENCIES) 
	@rm -f strchar$(EXEEXT)
	$(CXXLINK) $(strchar_OBJECTS) $(strchar_LDADD) $(LIBS)
strfrmscratch$(EXEEXT): $(strfrmscratch_OBJECTS) $(strfrmscratch_DEPENDENCIES) 
	@rm -f strfrmscratch$(EXEEXT)
	$(CXXLINK) $(strfrmscratch_OBJECTS) $(strfrmscratch_LDADD) $(LIBS)
string_toupper$(EXEEXT): $(string_toupper_OBJECTS) $(string_toupper_DEPENDENCIES) 
	@rm -f string_toupper$(EXEEXT)
	$(CXXLINK) $(string_toupper_OBJECTS) $(string_toupper_LDADD) $(LIBS)
stringstreamnum$(EXEEXT): $(stringstreamnum_OBJECTS) $(stringstreamnum_DEPENDENCIES) 
	@rm -f stringstreamnum$(EXEEXT)
	$(CXXLINK) $(stringstreamnum_OBJECTS) $(stringstreamnum_LDADD) $(LIBS)
strsplt$(EXEEXT): $(strsplt_OBJECTS) $(strsplt_DEPENDENCIES) 
	@rm -f strsplt$(EXEEXT)
	$(CXXLINK) $(strsplt_OBJECTS) $(strsplt_LDADD) $(LIBS)
vec$(EXEEXT): $(vec_OBJECTS) $(vec_DEPENDENCIES) 
	@rm -f vec$(EXEEXT)
	$(CXXLINK) $(vec_OBJECTS) $(vec_LDADD) $(LIBS)
vec2$(EXEEXT): $(vec2_OBJECTS) $(vec2_DEPENDENCIES) 
	@rm -f vec2$(EXEEXT)
	$(CXXLINK) $(vec2_OBJECTS) $(vec2_LDADD) $(LIBS)
vectorD$(EXEEXT): $(vectorD_OBJECTS) $(vectorD_DEPENDENCIES) 
	@rm -f vectorD$(EXEEXT)
	$(CXXLINK) $(vectorD_OBJECTS) $(vectorD_LDADD) $(LIBS)
vheap$(EXEEXT): $(vheap_OBJECTS) $(vheap_DEPENDENCIES) 
	@rm -f vheap$(EXEEXT)
	$(CXXLINK) $(vheap_OBJECTS) $(vheap_LDADD) $(LIBS)
virtualfunc$(EXEEXT): $(virtualfunc_OBJECTS) $(virtualfunc_DEPENDENCIES) 
	@rm -f virtualfunc$(EXEEXT)
	$(CXXLINK) $(virtualfunc_OBJECTS) $(virtualfunc_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/3Dvector.Po
include ./$(DEPDIR)/access_to_private.Po
include ./$(DEPDIR)/array_passing.Po
include ./$(DEPDIR)/autoptr.Po
include ./$(DEPDIR)/b.Po
include ./$(DEPDIR)/b2.Po
include ./$(DEPDIR)/cards.Po
include ./$(DEPDIR)/compile-time_polymorphism.Po
include ./$(DEPDIR)/copy_constructor_assignment.Po
include ./$(DEPDIR)/copy_if_trans.Po
include ./$(DEPDIR)/copy_output_list_vector.Po
include ./$(DEPDIR)/cstr.Po
include ./$(DEPDIR)/explicit.Po
include ./$(DEPDIR)/explicit2.Po
include ./$(DEPDIR)/fib.Po
include ./$(DEPDIR)/for_each_sum.Po
include ./$(DEPDIR)/for_each_sum2.Po
include ./$(DEPDIR)/funct_ptrs.Po
include ./$(DEPDIR)/functionoids.Po
include ./$(DEPDIR)/hanoi.Po
include ./$(DEPDIR)/hollywood.Po
include ./$(DEPDIR)/hollywood2.Po
include ./$(DEPDIR)/hollywood3.Po
include ./$(DEPDIR)/integrate.Po
include ./$(DEPDIR)/integrate2.Po
include ./$(DEPDIR)/iterswap.Po
include ./$(DEPDIR)/list.Po
include ./$(DEPDIR)/list2.Po
include ./$(DEPDIR)/list3.Po
include ./$(DEPDIR)/list3b.Po
include ./$(DEPDIR)/list3c.Po
include ./$(DEPDIR)/mainIstream.Po
include ./$(DEPDIR)/namedconstructoridiom.Po
include ./$(DEPDIR)/ostream_sample.Po
include ./$(DEPDIR)/permutation.Po
include ./$(DEPDIR)/raii.Po
include ./$(DEPDIR)/rand.Po
include ./$(DEPDIR)/rational.Po
include ./$(DEPDIR)/rational2.Po
include ./$(DEPDIR)/remove_if.Po
include ./$(DEPDIR)/resource_handle.Po
include ./$(DEPDIR)/rtrim.Po
include ./$(DEPDIR)/sort_input.Po
include ./$(DEPDIR)/sqlite3api.Po
include ./$(DEPDIR)/sqlite3apiHandler.Po
include ./$(DEPDIR)/state_pattern.Po
include ./$(DEPDIR)/state_pattern2.Po
include ./$(DEPDIR)/strategy_pattern.Po
include ./$(DEPDIR)/string_and_char.Po
include ./$(DEPDIR)/string_from_scratch.Po
include ./$(DEPDIR)/string_split.Po
include ./$(DEPDIR)/string_toupper.Po
include ./$(DEPDIR)/stringstream_num.Po
include ./$(DEPDIR)/time.Po
include ./$(DEPDIR)/vec.Po
include ./$(DEPDIR)/vec2.Po
include ./$(DEPDIR)/vec_on_heap.Po
include ./$(DEPDIR)/virtual_function.Po

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d $(distdir) || mkdir $(distdir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  unlzma -c $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic ctags dist dist-all dist-bzip2 \
	dist-gzip dist-lzma dist-shar dist-tarZ dist-zip distcheck \
	distclean distclean-compile distclean-generic distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
